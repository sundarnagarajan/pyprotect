
protected_class module
======================

>>> from protected_class import Protected
>>> from test_protected_class import TestObj
>>> t1 = TestObj()
>>> o1 = Protected(t1)

---------- Non-existing attribute
>>> o1.ra
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "src/protected_class.pyx", line 433, in protected_class.Protected.__getattribute__
    self.aclcheck(a=a, op='r')
  File "src/protected_class.pyx", line 409, in protected_class.Protected.aclcheck
    raise AttributeError(missing_msg)
AttributeError: Object 'TestObj' has no attribute 'ra'

---------- Add a new attribute at run-time

>>> o1.ra = 5

---------- New attribute was added to original object

>>> t1.ra
5

---------- Delete an attribute added at run-time

>>> del o1.ra

---------- New attribute was deleted from original object

>>> t1.ra
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'TestObj' object has no attribute 'ra'

---------- Delete a non-existent attribute

>>> del o1.ra
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "src/protected_class.pyx", line 451, in protected_class.Protected.__delattr__
    self.aclcheck(a=a, op='d')
  File "src/protected_class.pyx", line 428, in protected_class.Protected.aclcheck
    raise AttributeError(missing_msg)
AttributeError: Object 'TestObj' has no attribute 'ra'

---------- Set a read-write attribute

>>> o1.rw
5
>>> t1.rw
5
>>> o1.rw = 6
>>> t1.rw
6

---------- Try to set a read-only attribute

>>> o1._ro
2
>>> o1._ro = 3
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "src/protected_class.pyx", line 441, in protected_class.Protected.__setattr__
    self.aclcheck(a=a, op='w')
  File "src/protected_class.pyx", line 413, in protected_class.Protected.aclcheck
    raise AttributeError(ro_msg)
AttributeError: Read-only attribute: TestObj._ro

---------- __class__ return a COPY

>>> k = o1.__class__
>>> k.junk = 1
>>> o1.junk
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "src/protected_class.pyx", line 433, in protected_class.Protected.__getattribute__
    self.aclcheck(a=a, op='r')
  File "src/protected_class.pyx", line 409, in protected_class.Protected.aclcheck
    raise AttributeError(missing_msg)
AttributeError: Object 'TestObj' has no attribute 'junk'
>>> t1.junk
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'TestObj' object has no attribute 'junk'

---------- Delete a (property) attribute in __class__

>>> del k.x
>>> o1.x
1
>>> t1.x
1

---------- Test constructor parameters
>>> t1 = TestObj()
>>> o1 = Protected(t1, hide_all=True)
>>> dir(o1)
['x', 'y']
>>> t1 = TestObj()
>>> o1 = Protected(t1, hide_data=True)
>>> o1.rw
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "src/protected_class.pyx", line 433, in protected_class.Protected.__getattribute__
    self.aclcheck(a=a, op='r')
  File "src/protected_class.pyx", line 409, in protected_class.Protected.aclcheck
    raise AttributeError(missing_msg)
AttributeError: Object 'TestObj' has no attribute 'rw'
>>> t1 = TestObj()
>>> o1 = Protected(t1, hide_method=True)
>>> o1.inc_ro
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "src/protected_class.pyx", line 433, in protected_class.Protected.__getattribute__
    self.aclcheck(a=a, op='r')
  File "src/protected_class.pyx", line 409, in protected_class.Protected.aclcheck
    raise AttributeError(missing_msg)
AttributeError: Object 'TestObj' has no attribute 'inc_ro'
>>> t1 = TestObj()
>>> o1 = Protected(t1, hide_private=True)
>>> o1._ro
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "src/protected_class.pyx", line 433, in protected_class.Protected.__getattribute__
    self.aclcheck(a=a, op='r')
  File "src/protected_class.pyx", line 409, in protected_class.Protected.aclcheck
    raise AttributeError(missing_msg)
AttributeError: Object 'TestObj' has no attribute '_ro'
>>> t1 = TestObj()
>>> o1 = Protected(t1, hide_dunder=True)
>>> dir(o1)
['_ro', 'inc_ro', 'pvt', 'rw', 'sum', 'x', 'y']
>>> t1 = TestObj()
>>> o1 = Protected(t1, ro_all=True)
>>> o1.rw = 5
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "src/protected_class.pyx", line 441, in protected_class.Protected.__setattr__
    invalid_ident = 'Invalid identifier: %s' % (repr(a))
  File "src/protected_class.pyx", line 413, in protected_class.Protected.aclcheck
    if self.frozen:
AttributeError: Read-only attribute: TestObj.rw
>>> t1 = TestObj()
>>> o1 = Protected(t1, ro_data=True)
>>> o1.rw = 5
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "src/protected_class.pyx", line 441, in protected_class.Protected.__setattr__
    invalid_ident = 'Invalid identifier: %s' % (repr(a))
  File "src/protected_class.pyx", line 413, in protected_class.Protected.aclcheck
    if self.frozen:
AttributeError: Read-only attribute: TestObj.rw
>>> t1 = TestObj()
>>> o1 = Protected(t1)
>>> t1.inc_ro()
>>> o1.inc_ro = None
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "src/protected_class.pyx", line 441, in protected_class.Protected.__setattr__
    invalid_ident = 'Invalid identifier: %s' % (repr(a))
  File "src/protected_class.pyx", line 413, in protected_class.Protected.aclcheck
    if self.frozen:
AttributeError: Read-only attribute: TestObj.inc_ro
>>> t1 = TestObj()
>>> o1 = Protected(t1, ro_method=False)
>>> o1.inc_ro = None
>>> t1.inc_ro is None
True
>>> t1 = TestObj()
>>> o1 = Protected(t1, ro_method=True)
>>> o1.inc_ro = None
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "src/protected_class.pyx", line 441, in protected_class.Protected.__setattr__
    invalid_ident = 'Invalid identifier: %s' % (repr(a))
  File "src/protected_class.pyx", line 413, in protected_class.Protected.aclcheck
    if self.frozen:
AttributeError: Read-only attribute: TestObj.inc_ro
>>> t1.inc_ro is None
False
>>> t1 = TestObj()
>>> o1 = Protected(t1, ro_dunder=False)
>>> o1.__doc__ = 3
>>> t1 = TestObj()
>>> o1 = Protected(t1, ro_dunder=True)
>>> o1.__doc__ = 3
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "src/protected_class.pyx", line 441, in protected_class.Protected.__setattr__
    invalid_ident = 'Invalid identifier: %s' % (repr(a))
  File "src/protected_class.pyx", line 413, in protected_class.Protected.aclcheck
    if self.frozen:
AttributeError: Read-only attribute: TestObj.__doc__
>>> t1 = TestObj()
>>> o1 = Protected(t1, ro_dunder=False, ro_method=False)
>>> o1.__doc__ = 1
>>> t1 = TestObj()
>>> o1 = Protected(t1, ro_dunder=False, ro_method=False, ro=['__doc__'])
>>> o1.__doc__ = 1
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "src/protected_class.pyx", line 441, in protected_class.Protected.__setattr__
    invalid_ident = 'Invalid identifier: %s' % (repr(a))
  File "src/protected_class.pyx", line 413, in protected_class.Protected.aclcheck
    if self.frozen:
AttributeError: Read-only attribute: TestObj.__doc__
>>> t1 = TestObj()
>>> o1 = Protected(t1, ro_dunder=True)
>>> o1.__doc__ = 1
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "src/protected_class.pyx", line 441, in protected_class.Protected.__setattr__
    invalid_ident = 'Invalid identifier: %s' % (repr(a))
  File "src/protected_class.pyx", line 413, in protected_class.Protected.aclcheck
    if self.frozen:
AttributeError: Read-only attribute: TestObj.__doc__
>>> t1 = TestObj()
>>> o1 = Protected(t1, ro_dunder=True, rw=['__doc__'])
>>> o1.__doc__ = 1
>>> t1 = TestObj()
>>> o1 = Protected(t1)
>>> o1.__class__
<class 'test_protected_class.TestObj'>
>>> t1 = TestObj()
>>> o1 = Protected(t1, hide=['__class__'])
>>> o1.__class__
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "src/protected_class.pyx", line 433, in protected_class.Protected.__getattribute__
    return self.attr_acl.get(a).get(op)
  File "src/protected_class.pyx", line 409, in protected_class.Protected.aclcheck
    d['r'] = False
AttributeError: Object 'TestObj' has no attribute '__class__'
>>> t1 = TestObj()
>>> o1 = Protected(t1, hide=['__class__', '__doc__'])
>>> o1.__class__
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "src/protected_class.pyx", line 433, in protected_class.Protected.__getattribute__
    return self.attr_acl.get(a).get(op)
  File "src/protected_class.pyx", line 409, in protected_class.Protected.aclcheck
    d['r'] = False
AttributeError: Object 'TestObj' has no attribute '__class__'
>>> t1 = TestObj()
>>> o1 = Protected(t1, hide=['__class__', '__doc__'], show=['__class__'])
>>> o1.__class__
<class 'test_protected_class.TestObj'>
>>> t1 = TestObj()
>>> o1 = Protected(t1, frozen=False)
>>> o1.rw = 3
>>> t1 = TestObj()
>>> o1 = Protected(t1, frozen=True)
>>> o1.rw = 3
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "src/protected_class.pyx", line 441, in protected_class.Protected.__setattr__
    self.aclcheck(a=a, op='w')
  File "src/protected_class.pyx", line 403, in protected_class.Protected.aclcheck
    raise AttributeError(frozen_msg)
AttributeError: Cannot add attribute: Read-only object: TestObj
>>> t1 = TestObj()
>>> o1 = Protected(t1, add=False)
>>> o1.ra
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "src/protected_class.pyx", line 433, in protected_class.Protected.__getattribute__
    self.aclcheck(a=a, op='r')
  File "src/protected_class.pyx", line 409, in protected_class.Protected.aclcheck
    raise AttributeError(missing_msg)
AttributeError: Object 'TestObj' has no attribute 'ra'
>>> o1.ra = 5
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "src/protected_class.pyx", line 441, in protected_class.Protected.__setattr__
    self.aclcheck(a=a, op='w')
  File "src/protected_class.pyx", line 417, in protected_class.Protected.aclcheck
    raise AttributeError(noadd_msg)
AttributeError: Cannot add attribute: TestObj.ra
>>> t1 = TestObj()
>>> o1 = Protected(t1, add=True)
>>> o1.ra
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "src/protected_class.pyx", line 433, in protected_class.Protected.__getattribute__
    self.aclcheck(a=a, op='r')
  File "src/protected_class.pyx", line 409, in protected_class.Protected.aclcheck
    raise AttributeError(missing_msg)
AttributeError: Object 'TestObj' has no attribute 'ra'
>>> o1.ra = 5
>>> from test_protected_class import TestObj
>>> from protected_class import Protected
>>> t1 = TestObj()
>>> o1 = Protected(t1, protect_class=False)
>>> t1.junk
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'TestObj' object has no attribute 'junk'
>>> k = o1.__class__
>>> k.junk = 1
>>> t1.junk
1
>>> del k.junk
>>> t1.junk
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'TestObj' object has no attribute 'junk'
>>> t1 = TestObj()
>>> o1 = Protected(t1, protect_class=True)
>>> k = o1.__class__
>>> t1.junk2
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'TestObj' object has no attribute 'junk2'
>>> k.junk2 = 1
>>> t1.junk2
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'TestObj' object has no attribute 'junk2'
>>> from test_protected_class import TestObj
>>> from protected_class import Protected
>>> t1 = TestObj()
>>> o1 = Protected(t1, add=False)
>>> o1.ra
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "src/protected_class.pyx", line 433, in protected_class.Protected.__getattribute__
    self.aclcheck(a=a, op='r')
  File "src/protected_class.pyx", line 409, in protected_class.Protected.aclcheck
    raise AttributeError(missing_msg)
AttributeError: Object 'TestObj' has no attribute 'ra'
>>> o1.ra = 1
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "src/protected_class.pyx", line 441, in protected_class.Protected.__setattr__
    self.aclcheck(a=a, op='w')
  File "src/protected_class.pyx", line 417, in protected_class.Protected.aclcheck
    raise AttributeError(noadd_msg)
AttributeError: Cannot add attribute: TestObj.ra
>>> o1 = Protected(t1, add=True)
>>> o1.ra
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "src/protected_class.pyx", line 433, in protected_class.Protected.__getattribute__
    self.aclcheck(a=a, op='r')
  File "src/protected_class.pyx", line 409, in protected_class.Protected.aclcheck
    raise AttributeError(missing_msg)
AttributeError: Object 'TestObj' has no attribute 'ra'
>>> o1.ra = 1
>>> o1.ra
1
>>> del o1.ra
>>> o1.ra
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "src/protected_class.pyx", line 433, in protected_class.Protected.__getattribute__
    self.aclcheck(a=a, op='r')
  File "src/protected_class.pyx", line 409, in protected_class.Protected.aclcheck
    raise AttributeError(missing_msg)
AttributeError: Object 'TestObj' has no attribute 'ra'

